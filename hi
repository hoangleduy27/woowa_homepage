app.get('/redeem-gift', (req, res) => {
    const userId = req.session.userId;

    if (!userId) {
        return res.redirect('/login');
    }

    // Check if the user has enough points to redeem the gift (minimum 5000 points)
    const getUserPointQuery = 'SELECT user_point FROM users WHERE id = ?';
    connection.query(getUserPointQuery, [userId], (err, userRows) => {
        if (err) {
            console.error('Error getting user point:', err);
            return res.status(500).json({ message: 'Lỗi khi lấy điểm người dùng' });
        }

        if (userRows.length !== 1) {
            return res.status(500).json({ message: 'Người dùng không tồn tại hoặc có nhiều bản ghi trùng lặp' });
        }

        const userPoint = userRows[0].user_point;

        const voucherValue = 5000; // Giá trị voucher cần trừ điểm
        if (userPoint < voucherValue) {
            // User does not have enough points to redeem the gift
            return res.redirect('/events?redeemmessage=not_enough_points');
        }

        // Trừ điểm từ giá trị hiện tại của điểm người dùng
        const newUserPoint = userPoint - voucherValue;

        // Cập nhật giá trị điểm mới vào cơ sở dữ liệu
        const updateUserQuery = 'UPDATE users SET user_point = ?, ticket = "yes" WHERE id = ?';
        connection.query(updateUserQuery, [newUserPoint, userId], (err, updateUserResult) => {
            if (err) {
                console.error('Error updating user point and ticket status:', err);
                return res.status(500).json({ message: 'Lỗi khi cập nhật điểm người dùng và trạng thái vé' });
            }

            // Gửi email khi đăng ký thành công
            const getUserEmailQuery = 'SELECT email, username FROM users WHERE id = ?';
            connection.query(getUserEmailQuery, [userId], (err, userEmailRows) => {
                if (err) {
                    console.error('Error getting user email:', err);
                    return res.status(500).json({ message: 'Lỗi khi lấy email người dùng' });
                }

                if (userEmailRows.length !== 1) {
                    console.error('User with id ' + userId + ' not found or multiple records with the same id exist.');
                    return res.status(500).json({ message: 'Người dùng không tồn tại hoặc có nhiều bản ghi trùng lặp' });
                }

                const userEmail = userEmailRows[0].email;
                const userName = userEmailRows[0].username;

                // Thông tin email
                const mailOptions = {
                    from: 'hlduy01dn@gmail.com', // Email của bạn
                    to: userEmail, // Địa chỉ email người nhận từ CSDL
                    subject: 'Ticket Confirmation', // Tiêu đề email
                    html: `<p>Dear ${userName},</p>
                            <p>Your ticket has been confirmed.</p>
                            <p>Thank you for using our service!</p>
                            <p>Best regards,</p>
                            <p>The Admin Team</p>`,
                };

                // Gửi email
                transporter.sendMail(mailOptions, (error, info) => {
                    if (error) {
                        console.log('Error sending email:', error);
                    } else {
                        console.log('Email sent to:', userEmail);
                    }
                });
            });

            res.redirect(`/events?redeemmessage=success`);
        });
    });
});
